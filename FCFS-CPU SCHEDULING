/*
CPU SCHEDULING - FIRST COME FIRST SERVE
*/

#include <stdio.h>

int main() {
  int n,i,j;
  int t,y,k;
  int a[10],b[10],c[10],tat[10],wt[10],ct[10];
  float avt=0,avw=0;
  int P[10];
  printf("\n Enter the number of processes ");
  scanf("%d",&n);
  for(i=0;i<n;i++)
    {
      printf("\n Enter the arrival time for P%d  ",i+1);
      scanf("%d",&a[i]);
      printf("Enter the burst time for P%d  ",i+1);
      scanf("%d",&b[i]);
      P[i]=i+1;
    }
  //Arranging all the processes in order of arrival time
for(i=0;i<n;i++)
  for(j=0;j<n-i-1;j++)
    {
      if(a[j]>a[j+1])
      {
        t=a[j];
        k=P[j];
        y=b[j];
        a[j]=a[j+1];
        b[j]=b[j+1];
        P[j]=P[j+1];
        a[j+1]=t;
        b[j+1]=y;
        P[j+1]=k;
      }
    }

//Calculating Completion Time
ct[0]=a[0]+b[0];
for(i=1;i<n;i++)
  {
    ct[i]=ct[i-1]+b[i];
  }

//Calculating Turn Around Time
for(i=0;i<n;i++)
  {
    tat[i]=ct[i]-a[i];
  }

//Calculating Waiting Time
for(i=0;i<n;i++)
  {
    wt[i]=tat[i]-b[i];
  }

printf("\n Scheduling order");
printf("\n  P    \t    AT      BT      CT      TAT     WT");
for(i=0;i<n;i++)
  {
    printf("\n  P%d  %7d %7d %7d %7d %7d",P[i],a[i],b[i],ct[i],tat[i],wt[i]);
  }
for(i=0;i<n;i++)
  {
    avt+=tat[i];
    avw+=wt[i];
  }
avt/=n;
avw/=n;
printf("\n Average Turn Around Time = %f",avt);
printf("\n Average Waiting Time = %f",avw);
return 0;
}

//DD7
